@AbapCatalog.sqlViewName: 'ZDDLS_I_SO'
@AbapCatalog.compiler.compareFilter: true
@AbapCatalog.preserveKey: true
@AccessControl.authorizationCheck: #CHECK
@EndUserText.label: 'zdemo_i_salesorder'
@Search.searchable: true

//BOPF
@ObjectModel:{
    compositionRoot: true,
    transactionalProcessingEnabled: true,
    writeActivePersistence: 'ZPROTO_SO_A',
    semanticKey: 'SalesOrderID',
    representativeKey: 'SalesOrderID',
    createEnabled: true,
    updateEnabled: true,
    deleteEnabled: true
}
define view ZDEMO_I_SALESORDER
  as select from zproto_so_a as SalesOrder
  association [0..*] to ZDEMO_I_SALESORDER_ITEM as _Item on $projection.SalesOrderID = _Item.SalesOrderID
{
      //Sales order
      @Search.defaultSearchElement: true
  key SalesOrder.salesorderid      as SalesOrderID,

      //Business Partner
      @Search.defaultSearchElement: true
      SalesOrder.businesspartnerid as BusinessPartnerID,

      //Currency Code
      SalesOrder.currencycode      as CurrencyCode,

      //Gross Amount
      SalesOrder.grossamount       as GrossAmount,

      //Net Amount
      SalesOrder.netamount         as NetAmount,

      //Tax Amount
      SalesOrder.taxamount         as TaxAmount,

      //Lifecycle Status
      SalesOrder.lifecyclestatus   as LifecycleStatus,

      //SO Item display in detail page - used for navigation
      @ObjectModel.association.type: #TO_COMPOSITION_CHILD
     _Item
}
========================================================================================================================================
@AbapCatalog.sqlViewName: 'ZDDLS_C_SO'
@AbapCatalog.compiler.compareFilter: true
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'ZDEMO_C_SALESORDER'
@Search.searchable: true

//OData 
@OData.publish: true

//BOPF
@ObjectModel:{
    transactionalProcessingDelegated: true,
    semanticKey: 'SalesOrderID',
    representativeKey:  'SalesOrderID',
    createEnabled: true,
    updateEnabled: true,
    deleteEnabled: true
}

@UI.headerInfo.typeName: 'Sales Order'
@UI.headerInfo.title.value: 'SalesOrderID'

define view ZDEMO_C_SALESORDER 
as select from ZDEMO_I_SALESORDER as SalesOrder
    association [0..*] to ZDEMO_C_SALESORDER_ITEM as _Item
    on $projection.SalesOrderID = _Item.SalesOrderID {
    
    //Sales Order
    @UI.lineItem.position: 10 
    @UI.lineItem: [{type: #FOR_ACTION, position: 1, dataAction: 'BOPF:SET_OVERALL_STATUS_TO_PAID', label: 'Set Lifecycle status to Paid' }]
    @Search.defaultSearchElement: true
    @UI.identification: {position: 10, importance: #HIGH}
    @UI.selectionField: {position: 10 }
    key SalesOrder.SalesOrderID,
    
    //Business Partner 
    @Search.defaultSearchElement: true
    @UI.identification: {position: 20, importance: #HIGH}
    @UI.lineItem: { position: 20, importance: #HIGH }
    @UI.selectionField: {position: 20 }
    SalesOrder.BusinessPartnerID,
    
    //Currency Code 
    @UI.identification: {position: 30, importance: #HIGH}
    @UI.lineItem: { position: 30, importance: #HIGH }
    SalesOrder.CurrencyCode,
    
     //Gross Amount 
    @UI.identification: {position: 40, importance: #HIGH}
    @UI.lineItem: { position: 40, importance: #HIGH }
    @UI.dataPoint: {title: 'GrossAmount'}
    SalesOrder.GrossAmount,
    
    //Net Amount 
    @UI.identification: {position: 50, importance: #HIGH}
    @UI.lineItem: [{ position: 50, importance: #HIGH }]
    @UI.dataPoint: {title: 'NetAmount'}
    SalesOrder.NetAmount,
    
     //Tax Amount 
    @UI.identification: {position: 60, importance: #HIGH}
    @UI.lineItem: [{ position: 60, importance: #HIGH }]
    @UI.dataPoint: {title: 'TaxAmount'}
    SalesOrder.TaxAmount,
    
      //Lifecycle status
    @UI.identification: {position: 70, importance: #HIGH}
    @UI.lineItem: [{ position: 70, importance: #HIGH }]
    @UI.dataPoint: {title: 'LifecycleStatus'}
    SalesOrder.LifecycleStatus,
    
    @UI.fieldGroup: [{qualifier: 'Item', groupLabel: 'Item', position: 40, importance: #HIGH }]
    @ObjectModel.association.type: #TO_COMPOSITION_CHILD
    _Item
}
========================================================================================================================================
@AbapCatalog.sqlViewName: 'ZDDLS_I_SOI'
@AbapCatalog.compiler.compareFilter: true
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'ZDEMO_I_SALESORDER_ITEM'

@Search.searchable: true

//BOPF
@ObjectModel:{
    writeActivePersistence: 'ZPROTO_SOI_A',
    semanticKey: ['SalesOrderID','SalesOrderItemID'],
    representativeKey: 'SalesOrderItemID',
    createEnabled: true,
    updateEnabled: true,
    deleteEnabled: true
}
define view ZDEMO_I_SALESORDER_ITEM
  as select from zproto_soi_a as Item
  //Association to Header
  association [1..1] to ZDEMO_I_SALESORDER as _Salesorder on $projection.SalesOrderID = _Salesorder.SalesOrderID
{

      //Sales Order
      @Search.defaultSearchElement: true
      @ObjectModel.readOnly: true
  key Item.salesorderid     as SalesOrderID,

      //Sales order item
      @Search.defaultSearchElement: true
  key Item.salesorderitemid as SalesOrderItemID,

      //Product
      @Search.defaultSearchElement: true
      Item.productid        as ProductID,

      //Measure fields
      Item.currencycode     as CurrencyCode,
      Item.grossamount      as GrossAmount,
      Item.netamount        as NetAmount,
      Item.taxamount        as TaxAmount,

      @ObjectModel.association.type: [#TO_COMPOSITION_PARENT, #TO_COMPOSITION_ROOT]
      _Salesorder
}
========================================================================================================================================
@AbapCatalog.sqlViewName: 'ZDDLS_C_SOI'
@AbapCatalog.compiler.compareFilter: true
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'ZDEMO_C_SALESORDER_ITEM'

@Search.searchable: true
@UI.headerInfo.typeName: 'Sales Order Item'
@UI.headerInfo.title.value: 'SalesOrderItemID'

//BOPF
@ObjectModel:{
    transactionalProcessingDelegated: true,
    semanticKey: ['SalesOrderID','SalesOrderItemID'],
    representativeKey:  'SalesOrderItemID',
    createEnabled: true,
    updateEnabled: true,
    deleteEnabled: true
}

define view ZDEMO_C_SALESORDER_ITEM
  as select from ZDEMO_I_SALESORDER_ITEM as Item
  // Association to SO Header
  association [1..1] to ZDEMO_C_SALESORDER as _SalesOrder on $projection.SalesOrderID = _SalesOrder.SalesOrderID
{
      //Sales order
      @Search.defaultSearchElement: true
      @ObjectModel.readOnly: true
      @UI.identification: {position: 10, importance: #HIGH }
      @UI.lineItem: {position: 10, importance: #HIGH }
  key Item.SalesOrderID,
  
      //Sales order Item
      @Search.defaultSearchElement: true
      @ObjectModel.readOnly: true
      @UI.identification: {position: 20, importance: #HIGH }
      @UI.lineItem: {position: 20, importance: #HIGH }
  key Item.SalesOrderItemID,

      //Currency Code
      @UI.identification: {position: 70, importance: #HIGH }
      @UI.lineItem: {position: 70, importance: #HIGH }
  key Item.CurrencyCode,

      //Gross Amount
      @UI.identification: {position: 80, importance: #HIGH }
      @UI.lineItem: {position: 80, importance: #HIGH }
  key Item.GrossAmount,

      //Net Amount
      @UI.identification: {position: 90, importance: #HIGH }
      @UI.lineItem: {position: 90, importance: #HIGH }
  key Item.NetAmount,

      //Tax Amount
      @UI.identification: {position: 100, importance: #HIGH }
      @UI.lineItem: {position: 100, importance: #HIGH }
  key Item.TaxAmount,

      //BOPF Association
      @ObjectModel.association.type: [#TO_COMPOSITION_ROOT, #TO_COMPOSITION_PARENT]
      _SalesOrder
}
========================================================================================================================================
  method /BOBF/IF_FRW_ACTION~EXECUTE.
 case is_ctx-act_key.

        "Action - Set overall status
      when zif_demo_i_salesorder_c=>sc_action-zdemo_i_salesorder-set_overall_status_to_paid.
        " Get output structure of Action
        data(lt_sales_order) = value ztdemo_i_salesorder( ).

        "Read UI clicked sale order
        io_read->retrieve(
          exporting
            iv_node                 =  is_ctx-node_key   " BO Node Name
            it_key                  =  it_key            " BO Key
          importing
            et_data                 =  lt_sales_order ).   " Data Return Structure

        "Assuming single instance for a action
        read table lt_sales_order assigning field-symbol(<fs_sales_order>) index 1.
        if sy-subrc = 0.
          "Set the over all status to Paid ie 'P'
          if <fs_sales_order>-lifecyclestatus is initial.
            <fs_sales_order>-lifecyclestatus  = 'P'.
          endif.
        endif.

        "Now update the BO instance
        io_modify->update(
          exporting
            iv_node           = is_ctx-node_key    " Node
            iv_key            = <fs_sales_order>-key    " Key
            iv_root_key       = <fs_sales_order>-root_key     " NodeID
            is_data           = ref #( <fs_sales_order>-node_data )    " Data
            it_changed_fields = value #(
                                ( zif_demo_i_salesorder_c=>sc_node_attribute-zdemo_i_salesorder-lifecyclestatus ) )
                        ).

        et_data = lt_sales_order.

      when others.
        "Nothing

    endcase.
  endmethod.
